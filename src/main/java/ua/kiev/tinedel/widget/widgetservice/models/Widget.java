package ua.kiev.tinedel.widget.widgetservice.models;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import lombok.experimental.Accessors;
import lombok.experimental.FieldDefaults;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Null;
import javax.validation.constraints.Positive;
import java.time.Instant;
import java.util.UUID;

@SuppressWarnings("DefaultAnnotationParam")
@FieldDefaults(makeFinal = false, level = AccessLevel.PRIVATE)
@Data
@Accessors(chain = true)
@Builder
@NoArgsConstructor
@AllArgsConstructor
@With
public class Widget {

    @NotNull(groups = UpdateValidationGroup.class, message = "Id must not be null when updating widget")
    @Null(groups = CreateValidationGroup.class, message = "Id is autogenerated by server on create and must be null")
    @Schema(required = false)
    UUID id;

    @NotNull(message = "X coordinate is required", groups = {UpdateValidationGroup.class, CreateValidationGroup.class})
    @Schema(required = true)
    Integer x;
    @NotNull(message = "Y coordinate is required", groups = {UpdateValidationGroup.class, CreateValidationGroup.class})
    @Schema(required = true)
    Integer y;
    @NotNull(message = "Z-index is required", groups = {UpdateValidationGroup.class, CreateValidationGroup.class})
    @Schema(required = true)
    Integer zIndex;

    @Positive(message = "Width should be positive", groups = {UpdateValidationGroup.class, CreateValidationGroup.class})
    @Schema(required = true)
    int width;
    @Positive(message = "Height should be positive", groups = {UpdateValidationGroup.class, CreateValidationGroup.class})
    @Schema(required = true)
    int height;

    @EqualsAndHashCode.Exclude
    @Schema(required = false)
    Instant lastModifiedDate;
}
